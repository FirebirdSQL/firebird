case 1:
  if (!yytrial)
{
			if (requireSemicolon)
				yyerrorIncompleteCmd(YYPOSNARG(1));

			parsedStatement = yyvsp[0].dsqlStatement;
		}
break;
case 2:
  if (!yytrial)
{ parsedStatement = yyvsp[-1].dsqlStatement; }
break;
case 3:
  if (!yytrial)
{ yyval.dsqlStatement = FB_NEW_POOL(*statementPool) DsqlDmlStatement(*statementPool, scratch->getAttachment(), yyvsp[0].stmtNode); }
break;
case 4:
  if (!yytrial)
{ yyval.dsqlStatement = FB_NEW_POOL(*statementPool) DsqlDdlStatement(*statementPool, scratch->getAttachment(), yyvsp[0].ddlNode); }
break;
case 5:
  if (!yytrial)
{ yyval.dsqlStatement = FB_NEW_POOL(*statementPool) DsqlTransactionStatement(*statementPool, scratch->getAttachment(), yyvsp[0].traNode); }
break;
case 6:
  if (!yytrial)
{
			yyval.dsqlStatement = FB_NEW_POOL(*statementPool) DsqlSessionManagementStatement(
				*statementPool, scratch->getAttachment(), yyvsp[0].mngNode);
		}
break;
case 7:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].stmtNode; }
break;
case 8:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].storeNode; }
break;
case 9:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].mergeNode; }
break;
case 10:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].stmtNode; }
break;
case 11:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].stmtNode; }
break;
case 12:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].execBlockNode; }
break;
case 13:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].selectNode; }
break;
case 14:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].stmtNode; }
break;
case 15:
  if (!yytrial)
{ yyval.stmtNode = yyvsp[0].updInsNode; }
break;
case 16:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 17:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 18:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 19:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 20:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 21:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 22:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].grantRevokeNode; }
break;
case 23:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 24:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].grantRevokeNode; }
break;
case 25:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 26:
  if (!yytrial)
{ yyval.traNode = yyvsp[0].setTransactionNode; }
break;
case 27:
  if (!yytrial)
{ yyval.traNode = yyvsp[0].traNode; }
break;
case 28:
  if (!yytrial)
{ yyval.traNode = yyvsp[0].traNode; }
break;
case 29:
  if (!yytrial)
{ yyval.traNode = yyvsp[0].traNode; }
break;
case 30:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].mngNode; }
break;
case 31:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].setDecFloatRoundNode; }
break;
case 32:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].setDecFloatTrapsNode; }
break;
case 33:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].setSessionNode; }
break;
case 34:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].setRoleNode; }
break;
case 35:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].sessionResetNode; }
break;
case 36:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].mngNode; }
break;
case 37:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].setBindNode; }
break;
case 38:
  if (!yytrial)
{ yyval.mngNode = yyvsp[0].mngNode; }
break;
case 39:
  if (!yytrial)
{ yyval.grantRevokeNode = newNode<GrantRevokeNode>(true); }
break;
case 40:
yyval.grantRevokeNode = yyvsp[0].grantRevokeNode;
break;
case 41:
  if (!yytrial)
{ yyval.grantRevokeNode = yyvsp[-2].grantRevokeNode; }
break;
case 42:
yyval.privilegeArray = NOTRIAL(&yyvsp[0].grantRevokeNode->privileges);
break;
case 43:
yyval.granteeArray = NOTRIAL(&yyvsp[-6].grantRevokeNode->users);
break;
case 44:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_relation, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 45:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_procedure, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 46:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_udf, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 47:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_package_header, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 48:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_exception, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 49:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_generator, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 50:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_generator, *yyvsp[-5].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 51:
yyval.granteeArray = NOTRIAL(&yyvsp[-4].grantRevokeNode->users);
break;
case 52:
  if (!yytrial)
{
			yyvsp[-8].grantRevokeNode->object = yyvsp[-5].granteeClause;
			yyvsp[-8].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-8].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
			yyvsp[-8].grantRevokeNode->isDdl = true;
		}
break;
case 53:
  if (!yytrial)
{
			yyvsp[-8].grantRevokeNode->object = newNode<GranteeClause>(obj_database, getSecurityClassName(obj_database));
			yyvsp[-8].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-8].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
			yyvsp[-8].grantRevokeNode->isDdl = true;
		}
break;
case 54:
yyval.grantRevokeNode = NOTRIAL(yyvsp[0].grantRevokeNode);
break;
case 55:
yyval.granteeArray = NOTRIAL(&yyvsp[-3].grantRevokeNode->users);
break;
case 56:
  if (!yytrial)
{
			yyvsp[-7].grantRevokeNode->grantAdminOption = yyvsp[-1].boolVal;
			yyvsp[-7].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 57:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_relations, getSecurityClassName(obj_relations)); }
break;
case 58:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_views, getSecurityClassName(obj_views)); }
break;
case 59:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_procedures, getSecurityClassName(obj_procedures)); }
break;
case 60:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_functions, getSecurityClassName(obj_functions)); }
break;
case 61:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_packages, getSecurityClassName(obj_packages)); }
break;
case 62:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_generators, getSecurityClassName(obj_generators)); }
break;
case 63:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_generators, getSecurityClassName(obj_generators)); }
break;
case 64:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_domains, getSecurityClassName(obj_domains)); }
break;
case 65:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_exceptions, getSecurityClassName(obj_exceptions)); }
break;
case 66:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_roles, getSecurityClassName(obj_roles)); }
break;
case 67:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_charsets, getSecurityClassName(obj_charsets)); }
break;
case 68:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_collations, getSecurityClassName(obj_collations)); }
break;
case 69:
  if (!yytrial)
{ yyval.granteeClause = newNode<GranteeClause>(obj_filters, getSecurityClassName(obj_filters)); }
break;
case 72:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('A', NULL)); }
break;
case 73:
  if (!yytrial)
{ yyvsp[-2].privilegeArray->add(PrivilegeClause('A', NULL)); }
break;
case 74:
yyval.privilegeArray = yyvsp[0].privilegeArray;
break;
case 77:
yyval.privilegeArray = yyvsp[-2].privilegeArray;
break;
case 79:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('X', NULL)); }
break;
case 80:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('G', NULL)); }
break;
case 81:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('S', NULL)); }
break;
case 82:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('I', NULL)); }
break;
case 83:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('D', NULL)); }
break;
case 84:
  if (!yytrial)
{ yyvsp[-2].privilegeArray->add(PrivilegeClause('U', yyvsp[0].valueListNode)); }
break;
case 85:
  if (!yytrial)
{ yyvsp[-2].privilegeArray->add(PrivilegeClause('R', yyvsp[0].valueListNode)); }
break;
case 86:
  if (!yytrial)
{
			yyvsp[-2].privilegeArray->add(PrivilegeClause('C', NULL));
			yyvsp[-2].privilegeArray->add(PrivilegeClause('L', NULL));
			yyvsp[-2].privilegeArray->add(PrivilegeClause('O', NULL));
		}
break;
case 92:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('C', NULL)); }
break;
case 93:
  if (!yytrial)
{ yyvsp[-2].privilegeArray->add(PrivilegeClause('L', NULL)); }
break;
case 94:
  if (!yytrial)
{ yyvsp[-2].privilegeArray->add(PrivilegeClause('O', NULL)); }
break;
case 95:
  if (!yytrial)
{
			yyvsp[-2].privilegeArray->add(PrivilegeClause('L', NULL));
			yyvsp[-2].privilegeArray->add(PrivilegeClause('O', NULL));
		}
break;
case 99:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('C', NULL)); }
break;
case 100:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('L', NULL)); }
break;
case 101:
  if (!yytrial)
{ yyvsp[-1].privilegeArray->add(PrivilegeClause('O', NULL)); }
break;
case 102:
  if (!yytrial)
{ yyval.boolVal = false; }
break;
case 103:
  if (!yytrial)
{ yyval.boolVal = true; }
break;
case 104:
  if (!yytrial)
{ yyval.boolVal = false; }
break;
case 105:
  if (!yytrial)
{ yyval.boolVal = true; }
break;
case 106:
  if (!yytrial)
{ yyval.metaNamePtr = NULL; }
break;
case 107:
  if (!yytrial)
{ yyval.metaNamePtr = yyvsp[0].metaNamePtr; }
break;
case 111:
  if (!yytrial)
{ yyval.metaNamePtr = yyvsp[0].metaNamePtr; }
break;
case 112:
  if (!yytrial)
{ yyval.grantRevokeNode = newNode<GrantRevokeNode>(false); }
break;
case 113:
  if (!yytrial)
{ yyval.grantRevokeNode = yyvsp[-2].grantRevokeNode; }
break;
case 114:
yyval.privilegeArray = NOTRIAL(&yyvsp[-1].grantRevokeNode->privileges);
break;
case 115:
yyval.granteeArray = NOTRIAL(&yyvsp[-7].grantRevokeNode->users);
break;
case 116:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_relation, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 117:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_procedure, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 118:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_udf, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 119:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_package_header, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 120:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_exception, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 121:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_generator, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 122:
  if (!yytrial)
{
			yyvsp[-10].grantRevokeNode->object = newNode<GranteeClause>(obj_generator, *yyvsp[-4].metaNamePtr);
			yyvsp[-10].grantRevokeNode->grantAdminOption = yyvsp[-9].boolVal;
			yyvsp[-10].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 123:
yyval.granteeArray = NOTRIAL(&yyvsp[-5].grantRevokeNode->users);
break;
case 124:
  if (!yytrial)
{
			yyvsp[-8].grantRevokeNode->object = yyvsp[-4].granteeClause;
			yyvsp[-8].grantRevokeNode->grantAdminOption = yyvsp[-7].boolVal;
			yyvsp[-8].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
			yyvsp[-8].grantRevokeNode->isDdl = true;
		}
break;
case 125:
  if (!yytrial)
{
			yyvsp[-8].grantRevokeNode->object = newNode<GranteeClause>(obj_database, getSecurityClassName(obj_database));
			yyvsp[-8].grantRevokeNode->grantAdminOption = yyvsp[-7].boolVal;
			yyvsp[-8].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
			yyvsp[-8].grantRevokeNode->isDdl = true;
		}
break;
case 126:
yyval.grantRevokeNode = NOTRIAL(yyvsp[-1].grantRevokeNode);
break;
case 127:
  if (!yytrial)
{
			yyvsp[-7].grantRevokeNode->grantAdminOption = yyvsp[-6].boolVal;
			yyvsp[-7].grantRevokeNode->grantor = yyvsp[0].metaNamePtr;
		}
break;
case 129:
  if (!yytrial)
{ yyval.boolVal = false; }
break;
case 130:
  if (!yytrial)
{ yyval.boolVal = true; }
break;
case 131:
  if (!yytrial)
{ yyval.boolVal = false; }
break;
case 132:
  if (!yytrial)
{ yyval.boolVal = true; }
break;
case 133:
yyval.granteeArray = yyvsp[0].granteeArray;
break;
case 136:
yyval.granteeArray = yyvsp[-2].granteeArray;
break;
case 139:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_procedure, *yyvsp[0].metaNamePtr)); }
break;
case 140:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_udf, *yyvsp[0].metaNamePtr)); }
break;
case 141:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_package_header, *yyvsp[0].metaNamePtr)); }
break;
case 142:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_trigger, *yyvsp[0].metaNamePtr)); }
break;
case 143:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_view, *yyvsp[0].metaNamePtr)); }
break;
case 144:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_sql_role, *yyvsp[0].metaNamePtr)); }
break;
case 145:
  if (!yytrial)
{ yyvsp[-3].granteeArray->add(GranteeClause(obj_privilege, *yyvsp[0].metaNamePtr)); }
break;
case 146:
  if (!yytrial)
{ yyvsp[-1].granteeArray->add(GranteeClause(obj_user_or_role, *yyvsp[0].metaNamePtr)); }
break;
case 147:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_user, *yyvsp[0].metaNamePtr)); }
break;
case 148:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_user_group, *yyvsp[0].metaNamePtr)); }
break;
case 150:
yyval.grantRevokeNode = yyvsp[-2].grantRevokeNode;
break;
case 152:
  if (!yytrial)
{
			yyvsp[-1].grantRevokeNode->roles.add(GranteeClause(obj_sql_role, *yyvsp[0].metaNamePtr));
			yyvsp[-1].grantRevokeNode->defaultRoles.add(false);
		}
break;
case 153:
  if (!yytrial)
{
			yyvsp[-2].grantRevokeNode->roles.add(GranteeClause(obj_sql_role, *yyvsp[0].metaNamePtr));
			yyvsp[-2].grantRevokeNode->defaultRoles.add(true);
		}
break;
case 156:
  if (!yytrial)
{ yyvsp[-1].granteeArray->add(GranteeClause(obj_user_or_role, *yyvsp[0].metaNamePtr)); }
break;
case 157:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_user, *yyvsp[0].metaNamePtr)); }
break;
case 158:
  if (!yytrial)
{ yyvsp[-2].granteeArray->add(GranteeClause(obj_sql_role, *yyvsp[0].metaNamePtr)); }
break;
case 159:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode;}
break;
case 160:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 161:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterFunctionNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 162:
  if (!yytrial)
{ yyval.createAlterFunctionNode = newNode<CreateAlterFunctionNode>(*yyvsp[0].metaNamePtr); }
break;
case 163:
yyval.parametersClause = NOTRIAL(&yyvsp[0].createAlterFunctionNode->parameters);
break;
case 164:
yyval.createAlterFunctionNode = yyvsp[-3].createAlterFunctionNode;
break;
case 165:
  if (!yytrial)
{
				yyval.createAlterFunctionNode = yyvsp[-9].createAlterFunctionNode;
				yyval.createAlterFunctionNode->external = newNode<ExternalClause>();
				yyval.createAlterFunctionNode->external->name = *yyvsp[-2].stringPtr;
				yyval.createAlterFunctionNode->external->udfModule = *yyvsp[0].stringPtr;
			}
break;
case 167:
  if (!yytrial)
{
			yyval.legacyField = newNode<dsql_fld>();
			yyval.legacyField->dtype = dtype_blob;
			yyval.legacyField->length = sizeof(bid);
		}
break;
case 168:
  if (!yytrial)
{
			yyval.legacyField = newNode<dsql_fld>();
			yyval.legacyField->dtype = dtype_cstring;
			yyval.legacyField->charLength = (USHORT) yyvsp[-2].int32Val;
			if (yyvsp[0].metaNamePtr)
				yyval.legacyField->charSet = *yyvsp[0].metaNamePtr;
		}
break;
case 170:
yyval.parametersClause = yyvsp[0].parametersClause;
break;
case 172:
yyval.parametersClause = yyvsp[-1].parametersClause;
break;
case 175:
yyval.parametersClause = yyvsp[-2].parametersClause;
break;
case 177:
  if (!yytrial)
{
			yyvsp[-2].parametersClause->add(newNode<ParameterClause>(yyvsp[-1].legacyField));
			yyvsp[-2].parametersClause->back()->udfMechanism = yyvsp[0].nullableIntVal;
		}
break;
case 178:
  if (!yytrial)
{ yyval.nullableIntVal = std::nullopt; }
break;
case 179:
  if (!yytrial)
{ yyval.nullableIntVal = FUN_descriptor; }
break;
case 180:
  if (!yytrial)
{ yyval.nullableIntVal = FUN_scalar_array; }
break;
case 181:
  if (!yytrial)
{ yyval.nullableIntVal = FUN_ref_with_null; }
break;
case 182:
yyval.createAlterFunctionNode = yyvsp[0].createAlterFunctionNode;
break;
case 184:
yyval.createAlterFunctionNode = yyvsp[-1].createAlterFunctionNode;
break;
case 186:
  if (!yytrial)
{
			yyvsp[-2].createAlterFunctionNode->returnType = newNode<ParameterClause>(yyvsp[-1].legacyField);
			yyvsp[-2].createAlterFunctionNode->returnType->udfMechanism = yyvsp[0].int32Val;
		}
break;
case 187:
  if (!yytrial)
{ yyvsp[-2].createAlterFunctionNode->udfReturnPos = yyvsp[0].int32Val; }
break;
case 188:
  if (!yytrial)
{ yyval.int32Val = FUN_reference; }
break;
case 189:
  if (!yytrial)
{ yyval.int32Val = FUN_value; }
break;
case 190:
  if (!yytrial)
{ yyval.int32Val = FUN_descriptor; }
break;
case 191:
  if (!yytrial)
{ yyval.int32Val = -1 * FUN_reference; }
break;
case 192:
  if (!yytrial)
{ yyval.int32Val = -1 * FUN_descriptor; }
break;
case 193:
  if (!yytrial)
{
				CreateFilterNode* node = newNode<CreateFilterNode>(*yyvsp[-8].metaNamePtr);
				node->inputFilter = yyvsp[-6].filterNameNumber;
				node->outputFilter = yyvsp[-4].filterNameNumber;
				node->entryPoint = *yyvsp[-2].stringPtr;
				node->moduleName = *yyvsp[0].stringPtr;
				yyval.ddlNode = node;
			}
break;
case 194:
  if (!yytrial)
{ yyval.filterNameNumber = newNode<CreateFilterNode::NameNumber>(*yyvsp[0].metaNamePtr); }
break;
case 195:
  if (!yytrial)
{ yyval.filterNameNumber = newNode<CreateFilterNode::NameNumber>(yyvsp[0].int32Val); }
break;
case 196:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 197:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterExceptionNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 198:
  if (!yytrial)
{
				const auto node = newNode<CreateIndexNode>(*yyvsp[-3].metaNamePtr);
				node->active = yyvsp[-2].boolVal;
				node->unique = yyvsp[-7].boolVal;
				node->descending = yyvsp[-6].boolVal;
				node->createIfNotExistsOnly = yyvsp[-4].boolVal;
				node->relation = yyvsp[0].relSourceNode;
				yyval.ddlNode = node;
			}
break;
case 199:
yyval.createIndexNode = static_cast<CreateIndexNode*>(yyvsp[0].ddlNode);
break;
case 200:
  if (!yytrial)
{
				yyval.ddlNode = yyvsp[-2].ddlNode;
			}
break;
case 201:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterFunctionNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 202:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterProcedureNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 203:
  if (!yytrial)
{
			const auto node = yyvsp[0].createRelationNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 204:
  if (!yytrial)
{
			const auto node = yyvsp[0].createRelationNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 205:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterTriggerNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 206:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterViewNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 207:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterSequenceNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 208:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterSequenceNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 209:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].alterDatabaseNode; }
break;
case 210:
  if (!yytrial)
{
			const auto node = yyvsp[0].createDomainNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 211:
  if (!yytrial)
{
			const auto node = yyvsp[0].createShadowNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 212:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterRoleNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			node->createFlag = true;
			yyval.ddlNode = node;
		}
break;
case 213:
  if (!yytrial)
{
			const auto node = yyvsp[0].createCollationNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 214:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterUserNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 215:
  if (!yytrial)
{
			const auto node = yyvsp[0].createAlterPackageNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 216:
  if (!yytrial)
{
			const auto node = yyvsp[0].createPackageBodyNode;
			node->createIfNotExistsOnly = yyvsp[-1].boolVal;
			yyval.ddlNode = node;
		}
break;
case 217:
yyval.boolVal = false;
break;
case 218:
  if (!yytrial)
{
			const auto node = yyvsp[0].mappingNode;
			node->createIfNotExistsOnly = yyvsp[-2].boolVal;
			yyval.ddlNode = node;
		}
break;
case 219:
yyval.boolVal = true;
break;
case 220:
  if (!yytrial)
{
			const auto node = yyvsp[0].mappingNode;
			node->createIfNotExistsOnly = yyvsp[-2].boolVal;
			yyval.ddlNode = node;
		}
break;
case 221:
  if (!yytrial)
{ yyval.ddlNode = yyvsp[0].ddlNode; }
break;
case 222:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreateProcedureNode>(yyvsp[0].createAlterProcedureNode); }
break;
case 223:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreateFunctionNode>(yyvsp[0].createAlterFunctionNode); }
break;
case 224:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreateTableNode>(yyvsp[0].createRelationNode); }
break;
case 225:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreateTableNode>(yyvsp[0].createRelationNode); }
break;
case 226:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreateViewNode>(yyvsp[0].createAlterViewNode); }
break;
case 227:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreateTriggerNode>(yyvsp[0].createAlterTriggerNode); }
break;
case 228:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreatePackageNode>(yyvsp[0].createAlterPackageNode); }
break;
case 229:
  if (!yytrial)
{ yyval.ddlNode = newNode<RecreatePackageBodyNode>(y