/*
 *  The contents of this file are subject to the Initial
 *  Developer's Public License Version 1.0 (the "License");
 *  you may not use this file except in compliance with the
 *  License. You may obtain a copy of the License at
 *  http://www.ibphoenix.com/main.nfs?a=ibphoenix&page=ibp_idpl.
 *
 *  Software distributed under the License is distributed AS IS,
 *  WITHOUT WARRANTY OF ANY KIND, either express or implied.
 *  See the License for the specific language governing rights
 *  and limitations under the License.
 *
 *  The Original Code was created by Mark O'Donohue
 *  for the Firebird Open Source RDBMS project.
 *
 *  Copyright (c) 2002 Mark O'Donohue <skywalker@users.sourceforge.net>
 *  and all contributors signed below.
 *
 *  All Rights Reserved.
 *  Contributor(s): ______________________________________.
 *
 *  2005.05.19 Claudio Valderrama: signal tokens that aren't reserved in the
 *      engine thanks to special handling.
 *  Adriano dos Santos Fernandes
 */

#include "firebird.h"

#ifdef HAVE_STRING_H
#include <string.h>
#endif

#define _yacc_defines_yystype
#include "gen/parse.h"
#include "keywords.h"

// CVC: The latest column indicates whether the token has special handling in
// the parser. If it does, KEYWORD_stringIsAToken will return false.
// I discovered isql was being fooled and put double quotes around those
// special cases unnecessarily.

static const TOK tokens[] =
{
	{TOK_NOT_LSS, "!<", false},
	{TOK_NEQ, "!=", false},
	{TOK_NOT_GTR, "!>", false},
	{'(', "(", false},
	{')', ")", false},
	{',', ",", false},
	{'<', "<", false},
	{TOK_LEQ, "<=", false},
	{TOK_NEQ, "<>", false},	// Alias of !=
	{'=', "=", false},
	{'>', ">", false},
	{TOK_GEQ, ">=", false},
	{TOK_BIND_PARAM, ":=", false},
	{TOK_ABS, "ABS", false},
	{TOK_ABSOLUTE, "ABSOLUTE", true},
	{TOK_ACCENT, "ACCENT", true},
	{TOK_ACOS, "ACOS", false},
	{TOK_ACOSH, "ACOSH", false},
	{TOK_ACTION, "ACTION", true},
	{TOK_ACTIVE, "ACTIVE", false},
	{TOK_ADD, "ADD", false},
	{TOK_ADMIN, "ADMIN", false},
	{TOK_AFTER, "AFTER", false},
	{TOK_ALL, "ALL", false},
	{TOK_ALTER, "ALTER", false},
	{TOK_ALWAYS, "ALWAYS", true},
	{TOK_AND, "AND", false},
	{TOK_ANY, "ANY", false},
	{TOK_AS, "AS", false},
	{TOK_ASC, "ASC", false},	// Alias of ASCENDING
	{TOK_ASC, "ASCENDING", false},
	{TOK_ASCII_CHAR, "ASCII_CHAR", false},
	{TOK_ASCII_VAL, "ASCII_VAL", false},
	{TOK_ASIN, "ASIN", false},
	{TOK_ASINH, "ASINH", false},
	{TOK_AT, "AT", false},
	{TOK_ATAN, "ATAN", false},
	{TOK_ATAN2, "ATAN2", false},
	{TOK_ATANH, "ATANH", false},
	{TOK_AUTO, "AUTO", false},
	{TOK_AUTONOMOUS, "AUTONOMOUS", false},
	{TOK_AVG, "AVG", false},
	{TOK_BACKUP, "BACKUP", true},
	{TOK_BEFORE, "BEFORE", false},
	{TOK_BEGIN, "BEGIN", false},
	{TOK_BETWEEN, "BETWEEN", false},
	{TOK_BIGINT, "BIGINT", false},
	{TOK_BIN_AND, "BIN_AND", false},
	{TOK_BIN_NOT, "BIN_NOT", false},
	{TOK_BIN_OR, "BIN_OR", false},
	{TOK_BIN_SHL, "BIN_SHL", false},
	{TOK_BIN_SHR, "BIN_SHR", false},
	{TOK_BIN_XOR, "BIN_XOR", false},
	{TOK_BIT_LENGTH, "BIT_LENGTH", false},
	{TOK_BLOB, "BLOB", false},
	{TOK_BLOCK, "BLOCK", true},
	{TOK_BODY, "BODY", true},
	{TOK_BOOLEAN, "BOOLEAN", false},
	{TOK_BOTH, "BOTH", false},
	{TOK_BREAK, "BREAK", true},
	{TOK_BY, "BY", false},
	{TOK_CALLER, "CALLER", true},
	{TOK_CASCADE, "CASCADE", true},
	{TOK_CASE, "CASE", false},
	{TOK_CAST, "CAST", false},
	{TOK_CEIL, "CEIL", false},	// alias of CEILING
	{TOK_CEIL, "CEILING", false},
	{TOK_CHAR, "CHAR", false},
	{TOK_CHAR_LENGTH, "CHAR_LENGTH", false},
	{TOK_CHAR_TO_UUID, "CHAR_TO_UUID", false},
	{TOK_CHARACTER, "CHARACTER", false},
	{TOK_CHARACTER_LENGTH, "CHARACTER_LENGTH", false},
	{TOK_CHECK, "CHECK", false},
	{TOK_CLOSE, "CLOSE", false},
	{TOK_COALESCE, "COALESCE", true},
	{TOK_COLLATE, "COLLATE", false},
	{TOK_COLLATION, "COLLATION", true},
	{TOK_COLUMN, "COLUMN", false},
	{TOK_COMMENT, "COMMENT", true},
	{TOK_COMMIT, "COMMIT", false},
	{TOK_COMMITTED, "COMMITTED", false},
	{TOK_COMMON, "COMMON", true},
	{TOK_COMPUTED, "COMPUTED", false},
	{TOK_CONDITIONAL, "CONDITIONAL", false},
	{TOK_CONNECT, "CONNECT", false},
	{TOK_CONSTRAINT, "CONSTRAINT", false},
	{TOK_CONTAINING, "CONTAINING", false},
	{TOK_CONTINUE, "CONTINUE", true},
	{TOK_CORR, "CORR", false},
	{TOK_COS, "COS", false},
	{TOK_COSH, "COSH", false},
	{TOK_COT, "COT", false},
	{TOK_COUNT, "COUNT", false},
	{TOK_COVAR_POP, "COVAR_POP", false},
	{TOK_COVAR_SAMP, "COVAR_SAMP", false},
	{TOK_CREATE, "CREATE", false},
	{TOK_CROSS, "CROSS", false},
	{TOK_CSTRING, "CSTRING", false},
	{TOK_CUME_DIST, "CUME_DIST", false},
	{TOK_CURRENT, "CURRENT", false},
	{TOK_CURRENT_CONNECTION, "CURRENT_CONNECTION", false},
	{TOK_CURRENT_DATE, "CURRENT_DATE", false},
	{TOK_CURRENT_ROLE, "CURRENT_ROLE", false},
	{TOK_CURRENT_TIME, "CURRENT_TIME", false},
	{TOK_CURRENT_TIMESTAMP, "CURRENT_TIMESTAMP", false},
	{TOK_CURRENT_TRANSACTION, "CURRENT_TRANSACTION", false},
	{TOK_CURRENT_USER, "CURRENT_USER", false},
	{TOK_CURSOR, "CURSOR", false},
	{TOK_DATABASE, "DATABASE", false},
	{TOK_DATA, "DATA", true},
	{TOK_DATE, "DATE", false},
	{TOK_DATEADD, "DATEADD", false},
	{TOK_DATEDIFF, "DATEDIFF", false},
	{TOK_DAY, "DAY", false},
	{TOK_DDL, "DDL", false},
	{TOK_DEC, "DEC", false},
	{TOK_DECIMAL, "DECIMAL", false},
	{TOK_DECLARE, "DECLARE", false},
	{TOK_DECODE, "DECODE", false},
	{TOK_DECRYPT, "DECRYPT", true},
	{TOK_DEFAULT, "DEFAULT", false},
	{TOK_DEFINER, "DEFINER", true},
	{TOK_DELETE, "DELETE", false},
	{TOK_DELETING, "DELETING", true},
	{TOK_DENSE_RANK, "DENSE_RANK", false},
	{TOK_DESC, "DESC", false},	// Alias of DESCENDING
	{TOK_DESC, "DESCENDING", false},
	{TOK_DESCRIPTOR,	"DESCRIPTOR", true},
	{TOK_DETERMINISTIC, "DETERMINISTIC", false},
	{TOK_DIFFERENCE, "DIFFERENCE", true},
	{TOK_DISCONNECT, "DISCONNECT", false},
	{TOK_DISTINCT, "DISTINCT", false},
	{TOK_DO, "DO", false},
	{TOK_DOMAIN, "DOMAIN", false},
	{TOK_DOUBLE, "DOUBLE", false},
	{TOK_DROP, "DROP", false},
	{TOK_ELSE, "ELSE", false},
	{TOK_ENCRYPT, "ENCRYPT", true},
	{TOK_END, "END", false},
	{TOK_ENGINE, "ENGINE", true},
	{TOK_ENTRY_POINT, "ENTRY_POINT", false},
	{TOK_ERROR_MESSAGE, "ERROR_MESSAGE", true},
	{TOK_ESCAPE, "ESCAPE", false},
	{TOK_EXCEPTION, "EXCEPTION", false},
	{TOK_EXCLUDE, "EXCLUDE", false},
	{TOK_EXECUTE, "EXECUTE", false},
	{TOK_EXISTS, "EXISTS", false},
	{TOK_EXIT, "EXIT", false},
	{TOK_EXP, "EXP", false},
	{TOK_EXTERNAL, "EXTERNAL", false},
	{TOK_EXTRACT, "EXTRACT", false},
	{TOK_FALSE, "FALSE", false},
	{TOK_FETCH, "FETCH", false},
	{TOK_FILE, "FILE", false},
	{TOK_FILTER, "FILTER", false},
	{TOK_FIRST, "FIRST", true},
	{TOK_FIRST_VALUE, "FIRST_VALUE", false},
	{TOK_FIRSTNAME, "FIRSTNAME", false},
	{TOK_FLOAT, "FLOAT", false},
	{TOK_FLOOR, "FLOOR", false},
	{TOK_FOLLOWING, "FOLLOWING", false},
	{TOK_FOR, "FOR", false},
	{TOK_FOREIGN, "FOREIGN", false},
	{TOK_FREE_IT, "FREE_IT", true},
	{TOK_FROM, "FROM", false},
	{TOK_FULL, "FULL", false},
	{TOK_FUNCTION, "FUNCTION", false},
	{TOK_GDSCODE, "GDSCODE", false},
	{TOK_GENERATED, "GENERATED", true},
	{TOK_GENERATOR, "GENERATOR", false},
	{TOK_GEN_ID, "GEN_ID", false},
	{TOK_GEN_UUID, "GEN_UUID", false},
	{TOK_GLOBAL, "GLOBAL", false},
	{TOK_GRANT, "GRANT", false},
	{TOK_GRANTED, "GRANTED", false},
	{TOK_GROUP, "GROUP", false},
	{TOK_HASH, "HASH", false},
	{TOK_HAVING, "HAVING", false},
	{TOK_HOUR, "HOUR", false},
	{TOK_IDENTITY, "IDENTITY", false},
	{TOK_IF, "IF", false},
	{TOK_IGNORE, "IGNORE", true},
	{TOK_IIF, "IIF", true},
	{TOK_IN, "IN", false},
	{TOK_INACTIVE, "INACTIVE", false},
	{TOK_INCREMENT, "INCREMENT", false},
	{TOK_INDEX, "INDEX", false},
	{TOK_INNER, "INNER", false},
	{TOK_INPUT_TYPE, "INPUT_TYPE", false},
	{TOK_INSENSITIVE, "INSENSITIVE", false},
	{TOK_INSERT, "INSERT", false},
	{TOK_INSERTING, "INSERTING", true},
	{TOK_INT, "INT", false},
	{TOK_INTEGER, "INTEGER", false},
	{TOK_INTO, "INTO", false},
	{TOK_INVOKER, "INVOKER", true},
	{TOK_IS, "IS", false},
	{TOK_ISOLATION, "ISOLATION", false},
	{TOK_JOIN, "JOIN", false},
	{TOK_KEY, "KEY", false},
	{TOK_LAG, "LAG", false},
	{TOK_LAST, "LAST", true},
	{TOK_LAST_VALUE, "LAST_VALUE", false},
	{TOK_LASTNAME, "LASTNAME", false},
	{TOK_LEAD, "LEAD", false},
	{TOK_LEADING, "LEADING", false},
	{TOK_LEAVE, "LEAVE", true},
	{TOK_LEFT, "LEFT", false},
	{TOK_LENGTH, "LENGTH", false},
	{TOK_LEVEL, "LEVEL", false},
	{TOK_LIKE, "LIKE", false},
	{TOK_LIMBO, "LIMBO", true},
	{TOK_LINGER, "LINGER", true},
	{TOK_LIST, "LIST", false},
	{TOK_LN, "LN", false},
	{TOK_LOCK, "LOCK", true},
	{TOK_LOG, "LOG", false},
	{TOK_LOG10, "LOG10", false},
	{TOK_LONG, "LONG", false},
	{TOK_LOWER, "LOWER", false},
	{TOK_LPAD, "LPAD", false},
	{TOK_MANUAL, "MANUAL", false},
	{TOK_MAPPING, "MAPPING", false},
	{TOK_MATCHED, "MATCHED", false},
	{TOK_MATCHING, "MATCHING", false},
	{TOK_MAXIMUM, "MAX", false},
	{TOK_MAXVALUE, "MAXVALUE", false},
	{TOK_MERGE, "MERGE", false},
	{TOK_MILLISECOND, "MILLISECOND", false},
	{TOK_MIDDLENAME, "MIDDLENAME", false},
	{TOK_MINIMUM, "MIN", false},
	{TOK_MINUTE, "MINUTE", false},
	{TOK_MINVALUE, "MINVALUE", false},
	{TOK_MOD, "MOD", false},
	{TOK_MODULE_NAME, "MODULE_NAME", false},
	{TOK_MONTH, "MONTH", false},
	{TOK_NAME, "NAME", true},
	{TOK_NAMES, "NAMES", false},
	{TOK_NATIONAL, "NATIONAL", false},
	{TOK_NATURAL, "NATURAL", false},
	{TOK_NCHAR, "NCHAR", false},
	{TOK_NEXT, "NEXT", true},
	{TOK_NO, "NO", false},
	{TOK_NOT, "NOT", false},
	{TOK_NTH_VALUE, "NTH_VALUE", false},
	{TOK_NTILE, "NTILE", false},
	{TOK_NULLIF, "NULLIF", true},
	{TOK_NULL, "NULL", false},
	{TOK_NULLS, "NULLS", true},
	{TOK_NUMERIC, "NUMERIC", false},
	{TOK_OCTET_LENGTH, "OCTET_LENGTH", false},
	{TOK_OF, "OF", false},
	{TOK_OFFSET, "OFFSET", false},
	{TOK_ON, "ON", false},
	{TOK_ONLY, "ONLY", false},
	{TOK_OPEN, "OPEN", false},
	{TOK_OPTION, "OPTION", false},
	{TOK_OR, "OR", false},
	{TOK_ORDER, "ORDER", false},
	{TOK_OS_NAME, "OS_NAME", false},
	{TOK_OTHERS, "OTHERS", false},
	{TOK_OUTER, "OUTER", false},
	{TOK_OUTPUT_TYPE, "OUTPUT_TYPE", false},
	{TOK_OVER, "OVER", false},
	{TOK_OVERFLOW, "OVERFLOW", false},
	{TOK_OVERLAY, "OVERLAY", false},
	{TOK_PACKAGE, "PACKAGE", true},
	{TOK_PAD, "PAD", true},
	{TOK_PAGE, "PAGE", false},
	{TOK_PAGES, "PAGES", false},
	{TOK_PAGE_SIZE, "PAGE_SIZE", false},
	{TOK_PARAMETER, "PARAMETER", false},
	{TOK_PARTITION, "PARTITION", false},
	{TOK_PASSWORD, "PASSWORD", false},
	{TOK_PERCENT_RANK, "PERCENT_RANK", false},
	{TOK_PI, "PI", false},
	{TOK_PLACING, "PLACING", false},
	{TOK_PLAN, "PLAN", false},
	{TOK_PLUGIN, "PLUGIN", true},
	{TOK_POSITION, "POSITION", false},
	{TOK_POST_EVENT, "POST_EVENT", false},
	{TOK_POWER, "POWER", false},
	{TOK_PRECEDING, "PRECEDING", false},
	{TOK_PRECISION, "PRECISION", false},
	{TOK_PRESERVE, "PRESERVE", true},
	{TOK_PRIMARY, "PRIMARY", false},
	{TOK_PRIOR, "PRIOR", true},
	{TOK_PRIVILEGE, "PRIVILEGE", false},
	{TOK_PRIVILEGES, "PRIVILEGES", false},
	{TOK_PROCEDURE, "PROCEDURE", false},
	{TOK_PROTECTED, "PROTECTED", false},
	{TOK_RAND, "RAND", false},
	{TOK_RANGE, "RANGE", false},
	{TOK_RANK, "RANK", false},
	{TOK_DB_KEY, "RDB$DB_KEY", false},
	{TOK_RDB_GET_CONTEXT, "RDB$GET_CONTEXT", true},
	{TOK_RDB_RECORD_VERSION, "RDB$RECORD_VERSION", false},
	{TOK_RDB_ROLE_IN_USE, "RDB$ROLE_IN_USE", true},
	{TOK_RDB_SET_CONTEXT, "RDB$SET_CONTEXT", true},
	{TOK_RDB_SYSTEM_PRIVILEGE, "RDB$SYSTEM_PRIVILEGE", true},
	{TOK_READ, "READ", false},
	{TOK_REAL, "REAL", false},
	{TOK_VERSION, "RECORD_VERSION", false},
	{TOK_RECREATE, "RECREATE", false},
	{TOK_RECURSIVE, "RECURSIVE", false},
	{TOK_REFERENCES, "REFERENCES", false},
	{TOK_REGR_AVGX, "REGR_AVGX", false},
	{TOK_REGR_AVGY, "REGR_AVGY", false},
	{TOK_REGR_COUNT, "REGR_COUNT", false},
	{TOK_REGR_INTERCEPT, "REGR_INTERCEPT", false},
	{TOK_REGR_R2, "REGR_R2", false},
	{TOK_REGR_SLOPE, "REGR_SLOPE", false},
	{TOK_REGR_SXX, "REGR_SXX", false},
	{TOK_REGR_SXY, "REGR_SXY", false},
	{TOK_REGR_SYY, "REGR_SYY", false},
	{TOK_RELATIVE, "RELATIVE", true},
	{TOK_RELEASE, "RELEASE", false},
	{TOK_REPLACE, "REPLACE", false},
	{TOK_REQUESTS, "REQUESTS", true},
	{TOK_RESERVING, "RESERV", false},	// Alias of RESERVING
	{TOK_RESERVING, "RESERVING", false},
	{TOK_RESTART, "RESTART", true},
	{TOK_RESTRICT, "RESTRICT", true},
	{TOK_RETAIN, "RETAIN", false},
	{TOK_RETURN, "RETURN", false},
	{TOK_RETURNING, "RETURNING", true},
	{TOK_RETURNING_VALUES, "RETURNING_VALUES", false},
	{TOK_RETURNS, "RETURNS", false},
	{TOK_REVERSE, "REVERSE", false},
	{TOK_REVOKE, "REVOKE", false},
	{TOK_RIGHT, "RIGHT", false},
	{TOK_ROLE, "ROLE", true},
	{TOK_ROLLBACK, "ROLLBACK", false},
	{TOK_ROUND, "ROUND", false},
	{TOK_ROW, "ROW", false},
	{TOK_ROW_COUNT, "ROW_COUNT", false},
	{TOK_ROW_NUMBER, "ROW_NUMBER", false},
	{TOK_ROWS, "ROWS", false},
	{TOK_RPAD, "RPAD", false},
	{TOK_SAVEPOINT, "SAVEPOINT", false},
	{TOK_SCALAR_ARRAY, "SCALAR_ARRAY", true},
	{TOK_DATABASE, "SCHEMA", false},	// Alias of DATABASE
	{TOK_SCROLL, "SCROLL", false},
	{TOK_SECOND, "SECOND", false},
	{TOK_SQL, "SQL", true},
	{TOK_SECURITY, "SECURITY", true},
	{TOK_SEGMENT, "SEGMENT", false},
	{TOK_SELECT, "SELECT", false},
	{TOK_SENSITIVE, "SENSITIVE", false},
	{TOK_SEQUENCE, "SEQUENCE", true},
	{TOK_SERVERWIDE, "SERVERWIDE", true},
	{TOK_SET, "SET", false},
	{TOK_SHADOW, "SHADOW", false},
	{TOK_SHARED, "SHARED", false},
	{TOK_SIGN, "SIGN", false},
	{TOK_SIMILAR, "SIMILAR", false},
	{TOK_SIN, "SIN", false},
	{TOK_SINGULAR, "SINGULAR", false},
	{TOK_SINH, "SINH", false},
	{TOK_SIZE, "SIZE", false},
	{TOK_SKIP, "SKIP", true},
	{TOK_SMALLINT, "SMALLINT", false},
	{TOK_SNAPSHOT, "SNAPSHOT", false},
	{TOK_SOME, "SOME", false},
	{TOK_SORT, "SORT", false},
	{TOK_SOURCE, "SOURCE", true},
	{TOK_SPACE, "SPACE", true},
	{TOK_SQLCODE, "SQLCODE", false},
	{TOK_SQLSTATE, "SQLSTATE", false},
	{TOK_SQRT, "SQRT", false},
	{TOK_STABILITY, "STABILITY", false},
	{TOK_START, "START", false},
	{TOK_STARTING, "STARTING", false},
	{TOK_STARTING, "STARTS", false},	// Alias of STARTING
	{TOK_STATEMENT, "STATEMENT", true},
	{TOK_STATISTICS, "STATISTICS", false},
	{TOK_STDDEV_POP, "STDDEV_POP", false},
	{TOK_STDDEV_SAMP, "STDDEV_SAMP", false},
	{TOK_SUBSTRING,	"SUBSTRING", true},
	{TOK_SUB_TYPE, "SUB_TYPE", false},
	{TOK_SUM, "SUM", false},
	{TOK_SUSPEND, "SUSPEND", false},
	{TOK_SYSTEM, "SYSTEM", false},
	{TOK_TABLE, "TABLE", false},
	{TOK_TAGS, "TAGS", true},
	{TOK_TAN, "TAN", false},
	{TOK_TANH, "TANH", false},
	{TOK_TEMPORARY, "TEMPORARY", true},
	{TOK_THEN, "THEN", false},
	{TOK_TIES, "TIES", false},
	{TOK_TIME, "TIME", false},
	{TOK_TIMESTAMP, "TIMESTAMP", false},
	{TOK_TIMEOUT, "TIMEOUT", true},
	{TOK_TO, "TO", false},
	{TOK_TRAILING, "TRAILING", false},
	{TOK_TRANSACTION, "TRANSACTION", false},
	{TOK_TRIGGER, "TRIGGER", false},
	{TOK_TRIM, "TRIM", false},
	{TOK_TRUE, "TRUE", false},
	{TOK_TRUNC, "TRUNC", false},
	{TOK_TRUSTED, "TRUSTED", false},
	{TOK_TWO_PHASE, "TWO_PHASE", true},
	{TOK_TYPE, "TYPE", true},
	{TOK_UNBOUNDED, "UNBOUNDED", false},
	{TOK_UNCOMMITTED, "UNCOMMITTED", false},
	{TOK_UNDO, "UNDO", true},
	{TOK_UNION, "UNION", false},
	{TOK_UNIQUE, "UNIQUE", false},
	{TOK_UNKNOWN, "UNKNOWN", false},
	{TOK_UPDATE, "UPDATE", false},
	{TOK_UPDATING, "UPDATING", true},
	{TOK_UPPER, "UPPER", false},
	{TOK_USAGE, "USAGE", true},
	{TOK_USER, "USER", false},
	{TOK_USING, "USING", false},
	{TOK_UUID_TO_CHAR, "UUID_TO_CHAR", false},
	{TOK_VALUE, "VALUE", false},
	{TOK_VALUES, "VALUES", false},
	{TOK_VAR_POP, "VAR_POP", false},
	{TOK_VAR_SAMP, "VAR_SAMP", false},
	{TOK_VARCHAR, "VARCHAR", false},
	{TOK_VARIABLE, "VARIABLE", false},
	{TOK_VARYING, "VARYING", false},
	{TOK_VIEW, "VIEW", false},
	{TOK_WAIT, "WAIT", false},
	{TOK_WEEK, "WEEK", false},
	{TOK_WEEKDAY, "WEEKDAY", true},
	{TOK_WHEN, "WHEN", false},
	{TOK_WHERE, "WHERE", false},
	{TOK_WHILE, "WHILE", false},
	{TOK_WINDOW, "WINDOW", false},
	{TOK_WITH, "WITH", false},
	{TOK_WORK, "WORK", false},
	{TOK_WRITE, "WRITE", false},
	{TOK_YEAR, "YEAR", false},
	{TOK_YEARDAY, "YEARDAY", true},
	{TOK_NOT_LSS, "^<", false},	// Alias of !<
	{TOK_NEQ, "^=", false},				// Alias of !=
	{TOK_NOT_GTR, "^>", false},			// Alias of !>
	{TOK_CONCATENATE, "||", false},
	{TOK_NOT_LSS, "~<", false},	// Alias of !<
	{TOK_NEQ, "~=", false},				// Alias of !=
	{TOK_NOT_GTR, "~>", false},			// Alias of !>
	{0, NULL, false}
};

// This method is currently used in isql/isql.epp to check if a
// user field is a reserved word, and hence needs to be quoted.
// Obviously a hash table would make this a little quicker.
// MOD 29-June-2002

extern "C" {

int API_ROUTINE KEYWORD_stringIsAToken(const char* in_str)
{
	for (const TOK* tok_ptr = tokens; tok_ptr->tok_string; ++tok_ptr)
	{
		if (!tok_ptr->nonReserved && !strcmp(tok_ptr->tok_string, in_str))
			return true;
	}

	return false;
}

Tokens API_ROUTINE KEYWORD_getTokens()
{
	return tokens;
}

}
